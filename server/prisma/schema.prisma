// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id       Int        @id@unique @default(autoincrement())
  username String     @db.VarChar(255)
  password String     @db.VarChar(255)
  post     Post[]
  follower Follower[]
  chatrooms Chatroom[]
  message Message[]
}

//ondelete makes it so that when user is deleted the post will be deleted

model Post {
  id       Int       @unique @default(autoincrement())
  game     String
  title    String    @db.VarChar(255)
  body     String    @db.VarChar(255)
  casual   Boolean?   @default(false)
  comp     Boolean?   @default(false)
  dontcare Boolean?   @default(true)
  userId   Int
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  comment  Comment[]

  @@index([userId])
}

//ondelete makes it so that when post is deleted the comments for that post will be deleted

model Comment {
  id     Int    @unique @default(autoincrement())
  text   String @db.VarChar(255)
  postId Int
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@index([postId])
}

model Follower {
  id          Int @unique @default(autoincrement())
  followingId Int

  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Chatroom {
  id Int @id @unique @default(autoincrement())
  users User[]
  messages Message[]
}

model Message {
  id             Int      @id @unique @default(autoincrement())
  content String
  createAt       DateTime
  chatId         Int
  chatroom           Chatroom @relation(fields: [chatId], references: [id], onDelete: Cascade)
  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([chatId])
  @@index([userId])
}